{"version":3,"sources":["assets/icons/tlgrm-round.png","assets/icons/linked-round.png","assets/icons/email.png","components/weather/Weather.js","components/clock/Clock.js","components/contacts/Contacts.js","components/wrapper/Wrapper.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Weather","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","city","temperature","humidity","pressure","clouds","accuracy","weatherIcon","loader","_this2","navigator","geolocation","getCurrentPosition","position","entrypoint","concat","coords","latitude","longitude","setState","axios","get","then","res","data","weather","icon","getWeather","name","parseFloat","main","temp","toFixed","all","alert","timeout","_this3","setInterval","getCoordinates","weatherUpdate","react_default","a","createElement","className","src","alt","Component","Clock","fullDate","hours","minutes","seconds","milliseconds","Date","toLocaleDateString","weekday","month","day","date","getMinutes","getSeconds","toString","getHours","getMilliseconds","updateDate","updateTime","timerID","Math","floor","random","currentTime","clearInterval","Contacts","links","url","text","map","block","index","key","href","Wrapper","changeBackground","color","background","bind","assertThisInitialized","components_weather_Weather","components_clock_Clock","components_contacts_Contacts","Boolean","window","location","hostname","match","ReactDOM","render","components_wrapper_Wrapper","document","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.32a92f9c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/tlgrm-round.d4d3f4e0.png\";","module.exports = __webpack_public_path__ + \"static/media/linked-round.6976c96a.png\";","module.exports = __webpack_public_path__ + \"static/media/email.2276d9a1.png\";","import React, {Component, Fragment} from 'react';\r\nimport './Weather.scss';\r\n\r\nimport axios from 'axios';\r\n\r\nclass Weather extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      city: '',\r\n      temperature: '',\r\n      humidity: '',\r\n      pressure: '',\r\n      clouds: '',\r\n      accuracy: '',\r\n      weatherIcon: '',\r\n      loader: 'none',\r\n    };\r\n  };\r\n\r\n  getCoordinates() {\r\n\r\n    const makeRequest = position => {\r\n\r\n      const url = 'http://api.openweathermap.org/data/2.5/weather',\r\n          APIKey = '23cea5f070c059e9dfe4160788742b59';\r\n\r\n      let entrypoint = `${url}?lat=${position.coords.latitude}&lon=${position.coords.longitude}&appid=${APIKey}`;\r\n\r\n      this.setState({\r\n        accuracy: position.coords.accuracy,\r\n        // loader: 'block',\r\n      });\r\n\r\n      axios.get(entrypoint).then(res => {\r\n        this.setState(\r\n            {weatherIcon: `http://openweathermap.org/img/w/${res.data.weather[0].icon}.png`});\r\n        this.getWeather(res.data.name,\r\n            parseFloat(res.data.main.temp - 273.15).toFixed(1),\r\n            res.data.main.humidity, res.data.main.pressure * 0.75,\r\n            res.data.clouds.all);\r\n\r\n        // this.setState({\r\n        //     loader: 'none',\r\n        // });\r\n      });\r\n    };\r\n\r\n    if (navigator.geolocation) {\r\n      navigator.geolocation.getCurrentPosition(makeRequest);\r\n    } else {\r\n      alert('Geolocation is not supported by this browser.');\r\n    }\r\n    this.setState({loader: 'none'});\r\n\r\n  };\r\n\r\n  getWeather(city, temp, humidity, pressure, clouds) {\r\n    this.setState({\r\n      city: city,\r\n      temperature: temp,\r\n      humidity: humidity,\r\n      pressure: pressure,\r\n      clouds: clouds,\r\n    });\r\n  };\r\n\r\n  weatherUpdate(timeout) {\r\n    setInterval(() => {\r\n      this.getCoordinates();\r\n    }, timeout);\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.getCoordinates();\r\n    this.weatherUpdate(1800000);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n        <div className=\"weather-info\">\r\n          <div className=\"weather-city-name\">\r\n            <div className=\"weather-icon\">\r\n              <img src={this.state.weatherIcon} alt=\"weather icon\"/>\r\n            </div>\r\n            {this.state.city} <span\r\n              className=\"value\"> (~ {this.state.accuracy} m.)</span>\r\n          </div>\r\n          <div className=\"weather-values\">\r\n            <div className=\"weather__temperature\">\r\n              <span className=\"value\"> {this.state.temperature} °C </span>\r\n              <span className=\"text-label\">Temperature️ </span>\r\n            </div>\r\n            <div className=\"weather__humidity\">\r\n              <span className=\"value\"> {this.state.humidity} % </span>\r\n              <span className=\"text-label\">Humidity </span>\r\n            </div>\r\n            <div className=\"weather__pressure\">\r\n\t\t\t\t\t\t\t\t\t\t<span className=\"value\"> {this.state.pressure}\r\n                      <span className=\"value-small\">mmHg</span>\r\n\t\t\t\t\t\t\t\t\t\t</span>\r\n              <span className=\"text-label\">Pressure </span>\r\n            </div>\r\n            <div className=\"weather__clouds\">\r\n              <span className=\"value\"> {this.state.clouds} % </span>\r\n              <span className=\"text-label\">Clouds </span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Weather;\r\n","import React, { Component } from 'react';\r\nimport './Clock.scss';\r\n\r\nclass Clock extends Component {\r\n\r\n\t\tconstructor(props) {\r\n\t\t\t\tsuper(props);\r\n\r\n\t\t\t\tthis.state = {\r\n\t\t\t\t\t\tfullDate: '',\r\n\t\t\t\t\t\thours: 0,\r\n\t\t\t\t\t\tminutes: '',\r\n\t\t\t\t\t\tseconds: '',\r\n\t\t\t\t\t\tmilliseconds: 0\r\n\t\t\t\t}\r\n\t\t}\r\n\r\n\t\tupdateDate() {\r\n\t\t\t\tlet date = new Date(),\r\n\t\t\t\t\tfullDate = date.toLocaleDateString(\"en-EN\", {\r\n\t\t\t\t\t\t\tweekday: 'long',\r\n\t\t\t\t\t\t\tmonth: 'long',\r\n\t\t\t\t\t\t\tday: 'numeric'\r\n\t\t\t\t\t});\r\n\t\t\t\t// navigator.language === \"ru-RU\" ? fullDate = date.toLocaleDateString(\"ru-RU\", {\r\n\t\t\t\t// \t\tday: 'numeric',\r\n\t\t\t\t// \t\tmonth: 'long',\r\n\t\t\t\t// \t\tweekday: 'long'\r\n\t\t\t\t// }) : fullDate = date.toLocaleDateString(\"en-EN\", {\r\n\t\t\t\t// \t\tweekday: 'long',\r\n\t\t\t\t// \t\tmonth: 'long',\r\n\t\t\t\t// \t\tday: 'numeric'\r\n\t\t\t\t// });\r\n\t\t\t\tthis.setState({\r\n\t\t\t\t\t\tfullDate: fullDate\r\n\t\t\t\t});\r\n\t\t}\r\n\r\n\t\tupdateTime() {\r\n\t\t\t\tlet date = new Date(),\r\n\t\t\t\t\tminutes = date.getMinutes(),\r\n\t\t\t\t\tseconds = date.getSeconds();\r\n\r\n\t\t\t\tif (minutes < 10) {\r\n\t\t\t\t\t\tminutes = '0' + minutes.toString();\r\n\t\t\t\t}\r\n\t\t\t\tif (seconds < 10) {\r\n\t\t\t\t\t\tseconds = '0' + seconds.toString();\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.setState({\r\n\t\t\t\t\t\thours: date.getHours(),\r\n\t\t\t\t\t\tminutes: minutes,\r\n\t\t\t\t\t\tseconds: seconds,\r\n\t\t\t\t\t\tmilliseconds: date.getMilliseconds()\r\n\t\t\t\t});\r\n\t\t}\r\n\r\n\t\tcurrentTime() {\r\n\t\t\t\tthis.updateDate();\r\n\t\t\t\tthis.updateTime();\r\n\t\t\t\tthis.timerID = setInterval(() => this.updateTime(), Math.floor(Math.random() * 30));\r\n\t\t}\r\n\r\n\t\tcomponentDidMount() {\r\n\t\t\t\tthis.currentTime();\r\n\t\t}\r\n\r\n\t\tcomponentWillUnmount() {\r\n\t\t\t\tclearInterval(this.timerID);\r\n\t\t}\r\n\r\n\t\trender() {\r\n\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<div className=\"timedate\">\r\n\t\t\t\t\t\t<div className=\"caption\">\r\n\t\t\t\t\t\t\tToday is\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className=\"full-date\">{this.state.fullDate}</div>\r\n\t\t\t\t\t\t<hr/>\r\n\t\t\t\t\t\t<div className=\"time\">\r\n\t\t\t\t\t\t\t<div className=\"hours\">{this.state.hours}</div>\r\n\t\t\t\t\t\t\t<div className=\"minutes\">{this.state.minutes}</div>\r\n\t\t\t\t\t\t\t<div className=\"seconds\">{this.state.seconds}</div>\r\n\t\t\t\t\t\t\t<div className=\"milliseconds\">{this.state.milliseconds}</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t)\r\n\t\t}\r\n}\r\n\r\nexport default Clock;\r\n","import React, {Component} from 'react';\r\nimport './Contacts.scss';\r\n\r\nimport telegramLogo from '../../assets/icons/tlgrm-round.png';\r\nimport linkedLogo from '../../assets/icons/linked-round.png';\r\nimport emailLogo from '../../assets/icons/email.png';\r\n\r\nclass Contacts extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n     this.links = [\r\n      {\r\n        'url': 'https://t.me/el_destro',\r\n        'text': 'Telegram',\r\n      },\r\n      {\r\n        'url': 'mailto:georgii.zagladin@zagladin.pro',\r\n        'text': 'Email',\r\n      },\r\n      {\r\n        'url': 'https://www.linkedin.com/in/georgii-zagladin/',\r\n        'text': 'LinkedIn',\r\n      },\r\n    ];\r\n  }\r\n\r\n\r\n  render() {\r\n\r\n    return (\r\n        <div className=\"contacts-card\">\r\n          <div className=\"header\">\r\n\t\t\t\t\t\t\tContact me\r\n\t\t\t\t\t\t</div>\r\n          <div className=\"links\">\r\n            {this.links.map((block, index) =>\r\n                <a key={index}\r\n                   className=\"link\"\r\n                   href={block.url}\r\n                >\r\n                    {block.text}\r\n                </a>)}\r\n          </div>\r\n\r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Contacts;\r\n","import React, { Component } from 'react';\r\nimport './Wrapper.scss';\r\n\r\nimport Weather from '../weather/Weather';\r\nimport Clock from '../clock/Clock';\r\nimport Contacts from '../contacts/Contacts';\r\n\r\nclass Wrapper extends Component {\r\n\t\tconstructor(props) {\r\n\t\t\t\tsuper(props);\r\n\r\n\t\t\t\tthis.state = {\r\n\t\t\t\t\t\tbackground: '#000000',\r\n\t\t\t\t};\r\n\r\n\t\t\t\tthis.changeBackground = this.changeBackground.bind(this);\r\n\t\t}\r\n\r\n\r\n\t\tchangeBackground = (color) => {\r\n\t\t\t\tthis.setState({ background: color });\r\n\t\t};\r\n\r\n\t\trender() {\r\n\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<div className=\"background\">\r\n\t\t\t\t\t\t<div className=\"grid-container\">\r\n\t\t\t\t\t\t\t <div className=\"weather\">\r\n\t\t\t\t\t\t\t\t<Weather />\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className=\"clock\">\r\n\t\t\t\t\t\t\t\t<Clock />\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t <div className=\"contacts\">\r\n\t\t\t\t\t\t\t\t<Contacts />\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t)\r\n\t\t}\r\n}\r\n\r\nexport default Wrapper;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport Wrapper from './components/wrapper/Wrapper';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<Wrapper />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}